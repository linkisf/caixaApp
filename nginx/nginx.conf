user  nginx;
worker_processes  auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on;
  keepalive_timeout 65;
  server_tokens off;

  gzip on;
  gzip_types text/plain text/css application/javascript application/json image/svg+xml;
  gzip_min_length 1024;

  # DNS do Docker para resolução dinâmica
  resolver 127.0.0.11 ipv6=off valid=30s;

  # Mapeia upgrade (WebSocket/SSE)
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    server_name _;

    # SPA (Vite) estático
    root  /usr/share/nginx/html;
    index index.html;

    # Health do Nginx
    location = /nginx-health {
      add_header Content-Type text/plain;
      return 200 "ok\n";
    }

    # Cache agressivo para assets fingerprintados
    location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {
      expires 7d;
      add_header Cache-Control "public, max-age=604800, immutable";
      try_files $uri =404;
    }

    # Não cachear o HTML principal
    location = /index.html {
      add_header Cache-Control "no-store";
      try_files $uri =404;
    }

    # Proxy da API → backend (resolução dinâmica via variável)
    location /api/ {
      set $backend http://backend:8000;
      proxy_pass $backend;

      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # WebSocket / SSE
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      # Timeouts e buffers
      proxy_connect_timeout 5s;
      proxy_send_timeout    60s;
      proxy_read_timeout    60s;

      proxy_buffers 16 32k;
      proxy_busy_buffers_size 64k;
    }

    # SPA fallback
    location / {
      add_header Cache-Control "no-store";
      try_files $uri $uri/ /index.html;
    }

    client_max_body_size 10m;

    # Páginas de erro úteis
    error_page 502 503 504 /50x.html;
    location = /50x.html { return 502 "Bad Gateway (nginx)\n"; }
  }
}
